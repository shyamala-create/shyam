                    Learning:- Inheritence, encapsulation, callback_functions, static_functions.
                    challenges:- 
                    Total :- 500 lines of code completed
                               (20thth jan 2021)
                    working hours:- 4.5hrs

==================================================================================================================
<script>
class Car {
  constructor(brand) {
    this.carname = brand;
  }
  present() {
    return 'I have a ' + this.carname;
  }
}

class Model extends Car {
  constructor(brand, mod) {
    super(brand);
    this.model = mod;
  }
  show() {
    return this.present() + ', it is a ' + this.model;
  }
}

let myCar = new Model("Ford", "Mustang");
document.write(myCar.show())
=========================================================================================================================
class SHIPPING_DETAILS{
constructor(order){
this.Estimated_Arrival = "9 days";
this.Return_Policy =" Seller will accept returns within a 15 days from date of delivery of the item"
}
present(){
return this.Estimated_Arrival + this.Return_Policy
}
}
class Shipping extends SHIPPING_DETAILS{
constructor(order, ship){
super(order);
this.Shipping=ship;
}
show() {
    return this.present() + this.Shipping;
  }
}
let myOrder=new Shipping//("9 days"," Seller will accept returns within a 15 days from date of delivery of the item")
document.writeln("<br>")
document.write(myOrder.show())
=========================================================================================================================================
class BATTERY{
constructor(BatterCapacity){
this.Nonremovable_LiPo ="1715 mAh battery (6.9 Wh)"
this.Standby ="Up to 240 h (3G)"
this.Talktime = "Up to 14 h (3G)"
this.Musicplay = "Up to 50 h"
this.NETWORKTechnology = "GSM / CDMA / HSPA / EVDO / LTE"
}
present()
{
return this.Nonremovable_LiPo + this.Standby + this.Talktime + this.Musicplay + this.NETWORKTechnology ;
}
}
class Battery_life extends BATTERY{
constructor(charge, hertz){
super(charge);
this.hertz=hertz;
}
show(){
return this.Nonremovable_LiPo + this.Standby + this.Talktime + this.Musicplay + this.NETWORKTechnology ;
}
}
let capacityy= new Battery_life;
document.writeln(capacityy.show())
=============================================================================================================================
class Appearance_information{
constructor(appearance)
{
this.Weight="55";
this.Hight="5.8 ";
this.Eyecolour="brown"; 
this.Gender="male";
this.Homeaddress="#6/96,rajampet,kadapa"; 
this.Homephone="975545445"; 
this.Mobile=8553577745; 
this.State="andhraprsh";
this.Country="india";
}
present()
{
return 'The person apperance has' + this.Weight+this.Hight+this.Eyecolour+this.Gender+this.Homeaddress+this.Homephone+this.Mobile+this.State+this.Country;
}
}

class info extends Appearance_information
{
constructor(appearance)
{
super(appearance);
this.appeararance
}
show()
{
return this.present();
}
}
let informa=new info();
document.write("<br>");
document.write(informa.show())
========================================================================================================================================
class Vehicleinformation{
constructor(vehicle)
{
this.Vehicletype="light motor ";
this.vehicle= "car ";
this.Colour="red" ;
this.Enginenumber="kp98gtyihh457797" ;
this.Chassisnumber="tc5678898335r45 ";
this.Company="BMW";
}
present()
{
return 'The vehicle is a' + this.Vehicletype+ 'which is' + this.vehicle+ 'in colour'+this.Colour+this.Enginenumber+this.Chassisnumber+this.Company;
}
}

class information extends Vehicleinformation{
constructor(vehicle)
{
super(vehicle);
this.vehicle=vehicle;
}
show()
{
return this.present();
}
}
let vehi_info=new information();
document.writeln("<br>");
document.writeln(vehi_info.show())

==============================================================================================================================
<script>
function passeenger(status){
name=["venkatesh "," "," naveen RM"]
	if(name[1]==undefined){
    return "invalid"
    }
age=[27,27,23]
gender=["make","male","male"]
seat=[7,8,9]
return age
}
var PD=passeenger("RLWL")
if(PD!=undefined){
document.writeln(age[0])
}
function TNJ(callback){
callback("RLWL")
}
TNJ(passeenger)

function AI(identifyface, automation){
	document.write(identifyface, "<br>", automation)
}

function DataScience(callback){
	callback("intimeteclogo", "attendance")
}

DataScience(AI) //Line 7 
===================================================================================================================
class tickdet
{
constructor()
{
this.trainnumnname="56213 / TIRUPATI PASSR"
this.datebooking="14-Dec-2015"
this.class="SLEEPERCLASS"
}
dply(name)
{
document.writeln("<br>")
document.writeln(name)
}
}
var varsi=new tickdet()
//varsi.nxt()
//varsi.dply()
function TNJ(callback){
callback("XXX")
}
TNJ(varsi.dply)
===========================================================================================================================
class License{
constructor()
{
this.Lastname="kumar"
this.Firstname= "Pavan Middle"
this.name="Bijjavaram"
this.Drivers_license_number="ka50201500006939 "
this.state="karnataka"
this.Drivers_license country="india"
this.Civilian_type=" around india "
this.Employee_type="software engineer"
this.Date_of_birth="12-07-1992"
this.City_of_birth="rajampet"
}
dispaly()
{
document.write(Lastname)
}
}

</script>
<!-- edit your html here -->
=============================================================================================================================
class Vehicle {
  protected String brand = "Ford";        // Vehicle attribute
  public void honk() {                    // Vehicle method
    System.out.println("Tuut, tuut!");
  }
}

class Car extends Vehicle {
  private String modelName = "Mustang";    // Car attribute
  public static void main(String[] args) {

    // Create a myCar object
    Car myCar = new Car();

    // Call the honk() method (from the Vehicle class) on the myCar object
    myCar.honk();

    // Display the value of the brand attribute (from the Vehicle class) and the value of the modelName from the Car class
    System.out.println(myCar.brand + " " + myCar.modelName);
  }
}
</script>
========================================================================================================================================
class License{
constructor(license)
{
this.Lastname="kumar";
this.First_name="Pavan";
this.Middle_name="Bijjavaram ";
this.Drivers_license_number="ka50201500006939";
this.Drivers_license_state="karnataka";
this.Drivers_license_country="india";
this.Civilian_type="around india ";
this.Employee_type="software engineer";
this.Date_of_birth="12-07-1992";
this.City_of_birth="rajampet";
}
present()
{
return this.Lastname+this.First_name+this.Middle_name+this.Drivers_license_number+this.Drivers_license_state+this.Drivers_license_country+this.Civilian_type+this.Employee_type+this.Date_of_birth+this.City_of_birth;
}
}
class Drive extends License{
constructor(license, type){
super(license);
this.licensetype=type;
}
show(){
return this.present();
}
}
let license_type=new Drive();
document.writeln(license_type.show());

======================================================================================================================================
