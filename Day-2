                    Learning:- about validation, if and else, different methods, functions
                    challenges:- Bit confusions in  writting code different methods.
                    Total :- 220 lines of mission code completed
                               (15th jan 2021)
                    working hours:- 3hrs:30mins

=========================================================================================================================================
<script>
function netconnreq(name){
if(name == undefined){
return"invalid data"
}
Accountno = 1134556
Broadbanduserid = 11123456
ipaddress="10.245.56.78"
return Accountno
}
var Accountno= netconnreq("venk")
if(Accountno!=undefined){
}
document.writeln(Accountno)
function netusage(totalmbdoenload, mobiledownloadspeed)
{
    mobileuploadspeed="32.06 mbps"
    if( totalmbdoenload >= 100){
    return "usage is completed"
    }
    else{
    document.writeln(totalmbdoenload, mobiledownloadspeed)
    }
}
netusage(20, "30.05 mbps" )
class netconreq{
constructor()
{
this.Accountno = 1134556
this.Broadbanduserid = 11123456
this.ipaddress="10.245.56.78"
}
netusage(totalmbdoenload, mobiledownloadspeed)
{
this.totalmbdoenload=totalmbdoenload
}
display()
{
document.writeln(this.Accountno, this.broadbanduserid)
}
}
var connection = new netconreq()
connection.netusage("21.26 Gb", "30.05 mbps")
connection.display()

=============================================================================================================================================
class TheatreInformation{

constructor(theatrename,screen,moviename,certification,clas,pricepertkt,numberoftkt,seatnumbers,totalamount)
{
  this.TheatreName = theatrename
  this.Screen = screen
  this.MovieName = moviename
  this.MovieCertification = certification
  this.classy = clas
  this.PricePerTicket = pricepertkt
  this.NumberOfTkt = numberoftkt
  this.SeatNumbers = seatnumbers
  this.TotalAmount = totalamount
}
DisplayInformation()
{
 console.log(this.TheatreName,this.Screen,this.MovieName,this.TotalAmount)
}
DisplayGreetings()
{
  if(this.TotalAmount >500)
  { 
  return "expensive"
  }
  else
  {
   return "Good deal"
  }
}
}
let emily = new TheatreInformation("PSS Multiplex","Screen 3","jvt[c,cpp]","u","first","Rs 1000",5,"c1,c2,c3,c4,c5",1050)
    emily.DisplayInformation()
var msg = emily.DisplayGreetings()
console.log(msg)

=========================================================================================================================================
class netconreq{
constructor()
{
this.Accountno = 1134556
this.Broadbanduserid = 11123456
this.ipaddress="10.245.56.78"
}
netusage(totalmbdoenload, mobiledownloadspeed)
{
this.totalmbdoenload=totalmbdoenload
}
display()
{
document.writeln(this.Accountno, this.broadbanduserid)
}
}
var connection = new netconreq()
connection.netusage("21.26 Gb", "30.05 mbps")
connection.display()
var Accountno= netconnreq("venk")
if(Accountno!=undefined){
}
document.writeln(Accountno)
function netusage(totalmbdoenload, mobiledownloadspeed)
{
    mobileuploadspeed="32.06 mbps"
    if( totalmbdoenload >= 100){
    return "usage is completed"
    }
    else{
    document.writeln(totalmbdoenload, mobiledownloadspeed)
    }
}
netusage(20, "30.05 mbps" )
function netconnreq(name){
if(name == undefined){
return"invalid data"
}
Accountno = 1134556
Broadbanduserid = 11123456
ipaddress="10.245.56.78"
return Accountno
}
var Accountno= netconnreq("venk")
if(Accountno!=undefined){
}
document.writeln(Accountno)

==================================================================================================================

function MobileInfo(totalmbdownloaded,mobiledownloadspeed,mobileuploadspeed)
{
  
  if(totalmbdownloaded > 100)
   {
     return "Exceed"
   }
   else
   {
     return "Data is left"
     }
}

let results = MobileInfo(121,30,32.06)
 console.log(results)

==================================================================================================================

<script>
accno =112345
broadbandid= 11112345
ipaddess="10.45.67.8"

let redbus={
        fromcity:"banglr",
        onward: "20th jan 2021",
        }

let shyamala ={
               from :"BTM",
               to: "silkboard",
               requestride()
               {
               
               },
               receivedriver(){
               }
               }
class uber{
from ="BTM"
to= "silkboard"
requestride()
{
               
}
receivedriver(){
               }
}
let payment={
mobno:979384786
order id:mmj98745
transid:FCSjijr0938478764765
amount: 300
}

================================================================================================================================

//object data_structure
let netconnect = {
                accno :112345
                broadbandid: 11112345
                ipaddess:"10.45.67.8"
                }
document.writeln(netconnect.accno)
//array data_structure
let arr = [112345, 11112345, "10.45.67.8"]
document.writeln(arr[0])

for(i=0; i<arr.length; i++)
{
document.writeln("loop"+arr[i])
}
//map data structure
let arr1= new map()
arr1.set("c", 1) //set is a method which add datas in data structure
arr1.get("c")

====================================================================================================================================

class intimetec{
}
let time=new intimetec()
let tec={
name:"jvt"
}
tec.clang=function()
{
documnent.write(this.name)
}
tec.clang
class jvt{
constructor(){
this.name="jvt"
}
}
let p=new jvt()
let p2=new jvt()
let p1={ //p1 is referencing a class
   tablet : "dolo 650mg",
   persheet:15
}
document.write(p1.tablet)

p1.method= function(){ //this is actually a method not a func
document.write(this.tablet, this.method)
}
p1.method()

let p3={ //p1 is referencing a class(object class)
   tablet : "micromax 650mg",
   persheet:10
}
p3.method=function()
{
document.write(this.tablet, this.method)}
p3.method()

let shyam={
           company:"jvt",
           exp:14,
           location:"banglr",
           verifytrainer()
               {
                document.write(this.company)
               }
          }
shyam.verifytrainer()
</script>
==================================================================================================================================

function faredet(dist){
ditance="323KM"
    if(dist>=500){
    return "invalid"
    }
ticketfare="Rs.420.00"
servicecharge="Rs.22.90"
Totalfare="Rs.442.90"
return servicecharge
}
var accno= faredet(200)
if(accno!=undefined){
document.writeln(servicecharge)  
}

function passeenger(status){
name=["venkatesh "," "," naveen RM"]
	if(name[1]==undefined){
    return "invalid"
    }
age=[27,27,23]
gender=["make","male","male"]
seat=[7,8,9]
return age
}
var PD=passeenger("RLWL")
if(PD!=undefined){
document.writeln(age[0])
}
class flight
   {
     constructor(flightname,flightno)
     {
       this.flightname=flightname
       this.flightno=flightno
       this.info(100038,41150,"1/1/2021","Business Class","Premium")
     }
     info(id,no,date,time,clas,quota)
     {
          this.id=id
          this.no=no
          this.date=date
          this.time=time
          this.clas=clas
          this.quota=quota
          if(this.id==100038)
          {
            document.writeln("Your ticket details are")
            this.details("Adithyan","Male","aj@123","COK","MLB")
          }
          else
          {
            document.writeln("Error in ticket no try again!!")
          }
     }
     details(name,gender,mailid,from,to)
      {
         this.name=name
         this.gender=gender
         this.mailid=mailid
         this.from=from
         this.to=to
         if(mailid=="aj@123")
         {
          //document.writeln("Wish you a happy and safe journey")
          this.display()
        }
        else
        {
          document.writeln("Error try again!!")
        }
        }
      display()
      {
       
       document.writeln(this.flightname)
       document.writeln(this.flightno)
       document.writeln(this.id)
       document.writeln(this.no)
       document.writeln(this.date)
       document.writeln(this.time)
       document.writeln(this.clas)
       document.writeln(this.quota)
       document.writeln(this.name)
       document.writeln(this.gender)
       document.writeln(this.mailid)
       document.writeln(this.from)
       document.writeln(this.to)
       document.writeln("Wish you a happy and safe journey")
      }
    }
    var f=new flight("Air India",3664)
    
========================================================================================================================

let system=
   {
     rating:"4.5",
     processor:"Intelcorei5",
     ram:"4GB",
   spec(type,name,description)
   {
      this.type=type
      this.name=name
      this.description=description
      this.osdetails("Windows",10,8051)
   },
   osdetails(os,version,id)
   {
     this.os=os
     this.version=version
     this.id=id
     this.validate()
   },
   validate()
   {
     if(this.id==8051)
     {
       document.writeln("<br\>Veraion details are:")
       this.display()
     }
       else
       {
         document.writeln("Error in version id")
       }
   },
   display()
   {
    
     document.write(this.rating)
     document.write(this.processor)
     document.write(this.ram)
     document.write(this.type)
     document.write(this.name)
     document.write(this.description)
     document.write(this.os)
     document.write(this.version)
    document.write(this.id)

    }
   }
   system.spec("<br/>64Bit","<br/>hp","<br/>workgroup")

===================================================================================================================

class creditcarddetails
{
      creditcardverification(number)
       {
        this.number = number
         if(this.number == 97465893)
           {
            this.utilization= 3;
            this.balance="571.36,0";
            this.lastpayment="300, 11Jan2021";
            this.creditlimit="18000,17428.64";
            this.balance = this.showlimit="3600,3600";
           document.writeln("Available Cash" + this.balance);
          }
        else
         {
          document.writeln("Invalid Credentials");
         }
       }
    balance(TotalOutstanding , unbilled)
    {  
    this.TotalOutstanding = TotalOutstanding
    this.unbilled = unbilled
    document.writeln("Total Outstanding :"+ this.TotalOutstanding);   
    document.writeln("Unbilled "+ this.unbilled);
   }
    showlastpaymentmade(lastamountmade, PaymentMadeOn )
     {
       this.lastamountmade = lastamountmade
       this.PaymentMadeon = PaymentMadeOn
       document.writeln("Last Payment made on "+this.PaymentMadeon)
       document.writeln("Last Amount Made"+ this.lastamountmade);
     }
     creditlimit(TotalCredit, Availcred)
      {
         this.TotalCredit = TotalCredit
         this.Availcred = Availcred
         if(this.TotalCredit > 20000)
          {
             document.writeln("Credit Limit Exhausted");
          }
        else
         {
           this.rem  = 20000 - this.TotalCredit;
          document.writeln("Left over Credits "+ this.rem);
        }
      }
     limit(totalcash, cashavailable )
      {    
         this.totalcash= totalcash
         this.cashavailable = cashavailable
         return this.cashavailable;
      }
}
let bal = new creditcarddetails()
bal.creditcardverification(97465893)
bal.creditcardverification(97465893)

===============================================================================================================
